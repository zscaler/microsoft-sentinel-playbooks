{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Zscaler-Oauth2-LookupURL",
            "type":  "string"
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Entities_-_Get_URLs":  {
                            "runAfter":  {
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/url"
                            }
                        },
                        "For_each":  {
                            "foreach":  "@body('Entities_-_Get_URLs')?['URLs']",
                            "actions":  {
                                "HTTP":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "body":  [
                                            "@{items('For_each')?['Url']}"
                                        ],
                                        "headers":  {
                                            "Authorization":  "Bearer @{body('Parse_Zscaler-Oauth2-Authentication_JSON_Response')?['access_token']}"
                                        },
                                        "method":  "POST",
                                        "uri":  "https://@{variables('BaseURL')}/urlLookup"
                                    }
                                },
                                "Parse_JSON":  {
                                    "runAfter":  {
                                        "HTTP":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('HTTP')",
                                        "schema":  {
                                            "items":  {
                                                "properties":  {
                                                    "url":  {
                                                        "type":  "string"
                                                    },
                                                    "urlClassifications":  {
                                                        "items":  {
                                                            "type":  "string"
                                                        },
                                                        "type":  "array"
                                                    },
                                                    "urlClassificationsWithSecurityAlert":  {
                                                        "type":  "array"
                                                    }
                                                },
                                                "required":  [
                                                    "url",
                                                    "urlClassifications",
                                                    "urlClassificationsWithSecurityAlert"
                                                ],
                                                "type":  "object"
                                            },
                                            "type":  "array"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Parse_Zscaler-Oauth2-Authentication_JSON_Response":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Initialize_variable":  {
                            "runAfter":  {
                                "Entities_-_Get_URLs":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "BaseURL",
                                        "type":  "string",
                                        "value":  "zsapi.zscaler.net/api/v1"
                                    }
                                ]
                            }
                        },
                        "Parse_Zscaler-Oauth2-Authentication_JSON_Response":  {
                            "runAfter":  {
                                "Zscaler-Oauth2-Authentication":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Zscaler-Oauth2-Authentication')",
                                "schema":  {
                                    "properties":  {
                                        "access_token":  {
                                            "type":  "string"
                                        },
                                        "expires_in":  {
                                            "type":  "integer"
                                        },
                                        "ext_expires_in":  {
                                            "type":  "integer"
                                        },
                                        "token_type":  {
                                            "type":  "string"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "Zscaler-Oauth2-Authentication":  {
                            "runAfter":  {
                                "Initialize_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Workflow",
                            "inputs":  {
                                "host":  {
                                    "triggerName":  "manual",
                                    "workflow":  {
                                        "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/Zscaler-Oauth2-Authentication')]"
                                    }
                                }
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuresentinel_1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "identity":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/Zscaler-Oauth2-Authentication')]",
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "auth":  "Oauth2",
                "hidden-SentinelTemplateName":  "Zscaler-Oauth2-LookupURL",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
