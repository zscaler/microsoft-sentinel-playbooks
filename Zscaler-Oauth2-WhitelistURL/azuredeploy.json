{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "title":  "",
        "description":  "",
        "prerequisites":  "",
        "postDeployment":  [
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "community",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  ""
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "Zscaler-Oauth2-WhitelistURL",
            "type":  "string"
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
            "properties":  {
                "provisioningState":  "Succeeded",
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "Microsoft_Sentinel_incident":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Condition":  {
                            "actions":  {
                                "For_each":  {
                                    "foreach":  "@body('Parse_JSON')?['whitelistUrls']",
                                    "actions":  {
                                        "Append_to_array_variable_2":  {
                                            "runAfter":  {
                                                "Temp_Variable":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "AppendToArrayVariable",
                                            "inputs":  {
                                                "name":  "NewURLlist",
                                                "value":  "@items('For_each')"
                                            }
                                        },
                                        "Temp_Variable":  {
                                            "runAfter":  {
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "TempURL",
                                                "value":  "@items('For_each')"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                    },
                                    "type":  "Foreach"
                                }
                            },
                            "runAfter":  {
                                "Parse_JSON":  [
                                    "Succeeded"
                                ]
                            },
                            "expression":  {
                                "and":  [
                                    {
                                        "not":  {
                                            "equals":  [
                                                "@body('Parse_JSON')",
                                                "@variables('NullTest')"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type":  "If"
                        },
                        "Define_Base_URL":  {
                            "runAfter":  {
                                "For_each_2":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "BaseURL",
                                        "type":  "string",
                                        "value":  "zsapi.zscalertwo.net/api/v1"
                                    }
                                ]
                            }
                        },
                        "Entities_-_Get_URLs":  {
                            "runAfter":  {
                                "New_URL_List":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/url"
                            }
                        },
                        "For_each_2":  {
                            "foreach":  "@body('Entities_-_Get_URLs')?['URLs']",
                            "actions":  {
                                "Append_to_array_variable":  {
                                    "runAfter":  {
                                        "Parse_JSON_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "AppendToArrayVariable",
                                    "inputs":  {
                                        "name":  "NewURLlist",
                                        "value":  "@body('Parse_JSON_2')?['url']"
                                    }
                                },
                                "Parse_JSON_2":  {
                                    "runAfter":  {
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@items('For_each_2')",
                                        "schema":  {
                                            "properties":  {
                                                "Type":  {
                                                    "type":  "string"
                                                },
                                                "additionalData":  {
                                                    "properties":  {
                                                        "DetonationFinalUrl":  {
                                                            "type":  "string"
                                                        },
                                                        "DetonationVerdict":  {
                                                            "type":  "string"
                                                        }
                                                    },
                                                    "type":  "object"
                                                },
                                                "friendlyName":  {
                                                    "type":  "string"
                                                },
                                                "url":  {
                                                    "type":  "string"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                }
                            },
                            "runAfter":  {
                                "Entities_-_Get_URLs":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach"
                        },
                        "Get_Existing_Whitelist":  {
                            "runAfter":  {
                                "Parse_Zscaler-Oauth2-Authentication_JSON_Response":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Http",
                            "inputs":  {
                                "headers":  {
                                    "Authorization":  "Bearer @{body('Parse_Zscaler-Oauth2-Authentication_JSON_Response')?['access_token']}"
                                },
                                "method":  "GET",
                                "uri":  "https://@{variables('BaseURL')}/security"
                            }
                        },
                        "HTTP":  {
                            "runAfter":  {
                                "JSON_Body":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Http",
                            "inputs":  {
                                "body":  "@replace(variables('JSON Body'),',','\",\"')",
                                "headers":  {
                                    "Authorization":  "Bearer @{body('Parse_Zscaler-Oauth2-Authentication_JSON_Response')?['access_token']}",
                                    "Content-Type":  "application/json"
                                },
                                "method":  "PUT",
                                "uri":  "https://@{variables('BaseURL')}/security"
                            }
                        },
                        "Initialize_variable":  {
                            "runAfter":  {
                                "Condition":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "FinalListURLs",
                                        "type":  "array",
                                        "value":  "@union(variables('NewURLlist'),variables('NewURLlist'))"
                                    }
                                ]
                            }
                        },
                        "JSON_Body":  {
                            "runAfter":  {
                                "Join":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "JSON Body",
                                        "type":  "string",
                                        "value":  "{\"whitelistUrls\":[\"@{body('Join')}\"]}\n"
                                    }
                                ]
                            }
                        },
                        "Join":  {
                            "runAfter":  {
                                "Initialize_variable":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Join",
                            "inputs":  {
                                "from":  "@variables('FinalListURLs')",
                                "joinWith":  ","
                            }
                        },
                        "New_URL_List":  {
                            "runAfter":  {
                                "NullTest":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "NewURLlist",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "NullTest":  {
                            "runAfter":  {
                                "Temp_URL":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "NullTest",
                                        "type":  "object",
                                        "value":  {
                                        }
                                    }
                                ]
                            }
                        },
                        "Parse_JSON":  {
                            "runAfter":  {
                                "Get_Existing_Whitelist":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Get_Existing_Whitelist')",
                                "schema":  {
                                    "properties":  {
                                        "whitelistUrls":  {
                                            "items":  {
                                                "type":  "string"
                                            },
                                            "type":  "array"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "Parse_Zscaler-Oauth2-Authentication_JSON_Response":  {
                            "runAfter":  {
                                "Zscaler-Oauth2-Authentication":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ParseJson",
                            "inputs":  {
                                "content":  "@body('Zscaler-Oauth2-Authentication')",
                                "schema":  {
                                    "properties":  {
                                        "access_token":  {
                                            "type":  "string"
                                        },
                                        "expires_in":  {
                                            "type":  "integer"
                                        },
                                        "ext_expires_in":  {
                                            "type":  "integer"
                                        },
                                        "token_type":  {
                                            "type":  "string"
                                        }
                                    },
                                    "type":  "object"
                                }
                            }
                        },
                        "Temp_URL":  {
                            "runAfter":  {
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "TempURL",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "Zscaler-Oauth2-Authentication":  {
                            "runAfter":  {
                                "Define_Base_URL":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Workflow",
                            "inputs":  {
                                "host":  {
                                    "triggerName":  "manual",
                                    "workflow":  {
                                        "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/Zscaler-Oauth2-Authentication')]"
                                    }
                                }
                            }
                        }
                    },
                    "outputs":  {
                    }
                },
                "parameters":  {
                    "$connections":  {
                        "value":  {
                            "azuresentinel_1":  {
                                "connectionId":  "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName":  "[variables('MicrosoftSentinelConnectionName')]",
                                "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties":  {
                                    "authentication":  {
                                        "identity":  "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/Zscaler-Oauth2-Authentication')]",
                                        "type":  "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                },
                "accessControl":  {
                }
            },
            "name":  "[parameters('PlaybookName')]",
            "type":  "Microsoft.Logic/workflows",
            "location":  "[resourceGroup().location]",
            "tags":  {
                "auth":  "Oauth2",
                "hidden-SentinelTemplateName":  "Zscaler-Oauth2-WhitelistURL",
                "hidden-SentinelTemplateVersion":  "1.0"
            },
            "identity":  {
                "type":  "SystemAssigned"
            },
            "apiVersion":  "2017-07-01",
            "dependsOn":  [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type":  "Microsoft.Web/connections",
            "apiVersion":  "2016-06-01",
            "name":  "[variables('MicrosoftSentinelConnectionName')]",
            "location":  "[resourceGroup().location]",
            "kind":  "V1",
            "properties":  {
                "displayName":  "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues":  {
                },
                "parameterValueType":  "Alternative",
                "api":  {
                    "id":  "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}

